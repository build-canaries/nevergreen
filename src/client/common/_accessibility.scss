@use 'sass:color';
@use 'colours';
@use 'layout';

@mixin hover(
  $color: colours.$off-black,
  $background-color: colours.$white,
  $border-color: colours.$light-grey,
  $hover-color-change-percentage: colours.$color-change-percentage
) {
  background-color: color.scale(
    $background-color,
    $lightness: $hover-color-change-percentage * -1
  );
  border-color: color.scale(
    $border-color,
    $lightness: $hover-color-change-percentage * -1
  );
  border-radius: 0;
  color: $color;
  text-decoration-thickness: 3px;
}

@mixin focus(
  $color: colours.$off-black,
  $background-color: colours.$white,
  $border-color: colours.$light-grey,
  $focus-color-change-percentage: colours.$color-change-percentage
) {
  background-color: color.scale(
    $background-color,
    $lightness: $focus-color-change-percentage * -1
  );
  border-color: colours.$outline;
  border-radius: 0;
  color: $color;
  outline: 5px solid colours.$outline;
  outline-offset: unset;
  position: relative;
  z-index: layout.$focus-index; // make sure the focus outline isn't below adjacent elements
}

@mixin interactive(
  $color: colours.$off-black,
  $background-color: colours.$white,
  $border-color: colours.$light-grey,
  $hover-color-change-percentage: colours.$color-change-percentage,
  $focus-color-change-percentage: colours.$color-change-percentage
) {
  &:hover {
    @include hover(
      $color,
      $background-color,
      $border-color,
      $hover-color-change-percentage
    );

    @content;
  }

  &:focus {
    @include focus(
      $color,
      $background-color,
      $border-color,
      $focus-color-change-percentage
    );

    @content;
  }
}

@mixin visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  display: block;
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}
