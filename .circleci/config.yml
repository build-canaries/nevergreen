version: 2.1

jobs:
  build:
    working_directory: ~/nevergreen

    docker:
      - image: circleci/openjdk:8-jdk

    steps:
      - checkout

      - restore_cache:
          keys:
            - v4-nevergreen-ui-{{ checksum ".nvmrc" }}-{{ checksum "package-lock.json" }}
            - v4-nevergreen-ui-{{ checksum ".nvmrc" }}- # fall back to any cache for the current version of node

      - restore_cache:
          keys:
            - v1-nevergreen-server-{{ checksum "project.clj" }}

      - run:
          name: update version
          command: ./.circleci/update-version.sh

      - run:
          name: install node
          command: ./.circleci/install-node.sh

      - run:
          name: build
          environment:
            BASH_ENV: "~/.nvm/nvm.sh"
          command: |
            ./.circleci/dependencies.sh
            ./.circleci/compile.sh

      - save_cache:
          key: v1-nevergreen-server-{{ checksum "project.clj" }}
          paths:
            - ~/.m2
      - save_cache:
          key: v4-nevergreen-ui-{{ checksum ".nvmrc" }}-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
            - ~/.nvm

      - run:
          name: test
          environment:
            BASH_ENV: "~/.nvm/nvm.sh"
          command: ./.circleci/test.sh

      - store_test_results:
          path: ./target/test-reports

      - store_artifacts:
          path: ./target/nevergreen-standalone.jar
      - store_artifacts:
          path: ./coverage
      - store_artifacts:
          path: ./target/security-reports

      - persist_to_workspace:
          root: .
          paths:
            - ./resources/*.txt
            - ./.circleci/*
            - ./target/nevergreen-standalone.jar
            - ./Dockerfile
 
  journey-tests:
    working_directory: ~/nevergreen

    docker:
      - image: cypress/base:10

    steps:
      - checkout

      - attach_workspace:
          at: ~/nevergreen

      - restore_cache:
          keys:
            - v5-nevergreen-cypress-{{ checksum ".nvmrc" }}-{{ checksum "package-lock.json" }}
            - v5-nevergreen-cypress-{{ checksum ".nvmrc" }}- # fall back to any cache for the current version of node

      - run:
          name: functional tests
          environment:
              CYPRESS_BASE_URL: "https://staging.nevergreen.io"
              CYPRESS_TRAY_URL: "https://raw.githubusercontent.com/build-canaries/nevergreen/master/cctray_xml_feed_mock/resources/cctray.xml"
              CYPRESS_TRAY_USERNAME: ""
              CYPRESS_TRAY_PASSWORD: ""
          command: |
            npm install
            npm run test:journey

      - save_cache:
          key: v5-nevergreen-cypress-{{ checksum ".nvmrc" }}-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
            - ~/.nvm
            - ~/.npm
            - ~/.cache

      - store_test_results:
          path: ./target/test-reports

      - store_artifacts:
          path: ./target/test-reports/journey

  deploy-staging:
    working_directory: ~/nevergreen

    docker:
      - image: circleci/openjdk:8-jdk

    steps:
      - setup_remote_docker

      - attach_workspace:
          at: ~/nevergreen

      - add_ssh_keys:
          fingerprints:
            - "84:1d:85:ed:80:92:c5:21:53:15:54:b9:52:99:29:35"

      - run:
          name: add nevergreen.io to known hosts
          command: |
            mkdir -p ~/.ssh
            ssh-keyscan 35.176.150.70 >> ~/.ssh/known_hosts

      - run:
          name: export version
          command: ./.circleci/export-version.sh

      - run:
          name: deploy staging
          command: ./.circleci/deploy.sh

      - run:
          name: smoke test
          environment:
            HOST: "https://staging.nevergreen.io"
          command: ./.circleci/smoke-test.sh

      - run:
          name: create docker image
          command: |
            docker build -t buildcanariesteam/nevergreen:staging .
            docker login -u ${DOCKER_HUB_USERNAME} -p ${DOCKER_HUB_PASSWORD}
            docker push buildcanariesteam/nevergreen:staging

  deploy-prod:
    working_directory: ~/nevergreen

    docker:
      - image: circleci/openjdk:8-jdk

    steps:
      - setup_remote_docker

      - attach_workspace:
          at: ~/nevergreen

      - add_ssh_keys:
          fingerprints:
            - "84:1d:85:ed:80:92:c5:21:53:15:54:b9:52:99:29:35"

      - run:
          name: add nevergreen.io to known hosts
          command: |
            mkdir -p ~/.ssh
            ssh-keyscan 35.176.150.70 >> ~/.ssh/known_hosts

      - run:
          name: install command line json parser
          command: sudo apt-get install jq

      - run:
          name: export version
          command: ./.circleci/export-version.sh

      - run:
          name: deploy production
          command: ./.circleci/release.sh

      - run:
          name: smoke test
          environment:
            HOST: "https://nevergreen.io"
          command: ./.circleci/smoke-test.sh

      - run:
          name: create docker image
          command: |
            docker build -t buildcanariesteam/nevergreen:latest -t buildcanariesteam/nevergreen:${VERSION} .
            docker login -u ${DOCKER_HUB_USERNAME} -p ${DOCKER_HUB_PASSWORD}
            docker push buildcanariesteam/nevergreen:latest
            docker push buildcanariesteam/nevergreen:${VERSION}

      - run:
          name: create release on GitHub
          command: ./.circleci/release-github.sh

      - run:
          name: tweet release
          command: ./.circleci/release-tweet.sh

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy-staging:
          requires:
            - build
      - journey-tests:
          requires:
            - deploy-staging
      - hold:
          type: approval
          requires:
            - journey-tests
      - deploy-prod:
          requires:
            - hold
